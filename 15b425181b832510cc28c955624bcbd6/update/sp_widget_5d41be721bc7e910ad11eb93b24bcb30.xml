<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller=function() {
  /* widget controller */
  var c = this;
	
	c.containerId = Math.random().toString(16).slice(2);
	c.title = c.options.title || c.data.keys.CallServiceDeskTitle || 'Not Configured';
	
	if (c.data.validateKeys.hasEmptyFields) {
		c.error_message = c.data.validateKeys.message;
		return;
	}	

	setTimeout(function () {
		CallServiceDesk.renderOn(c.containerId, {
			description: c.options.description || c.data.keys.CallServiceDeskDescription,
			serverConfig: {
				domain: c.data.keys.CallServiceDeskDomain,
				addresses: [c.data.keys.CallServiceDeskAddress],
			},
			callConfig: {
				call: c.data.keys.CallServiceDeskCall,
				caller: c.data.keys.CallServiceDeskCaller,
				callerDN: c.data.keys.CallServiceDeskCallerDN,
			},
		});
	}, 10);
};]]></client_script>
        <controller_as>c</controller_as>
        <css>.panel-body, .ask-container-form-group {&#13;
		display: flex;&#13;
  	flex-direction: column;&#13;
}&#13;
&#13;
.panel-body button {&#13;
	margin-top: 1rem;&#13;
  background-color: $sass-custom-color;  &#13;
}&#13;
&#13;
.present-answer {&#13;
	margin-top: 1rem;&#13;
}&#13;
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id/>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) { 

}]]></link>
        <name>CallServiceDesk</name>
        <option_schema>[{"hint": "The title of this card","name": "title","section": "Presentation","label": "Title","type": "string"},{"hint": "Describe of the widget rendered inside the widget","name": "description","section": "Presentation","label": "Description","type": "string"}]</option_schema>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	var chUtil = new ChameleonUtil();
	var validFields = ['CallServiceDeskDomain', 'CallServiceDeskAddress', 'CallServiceDeskCall', 'CallServiceDeskCaller', 'CallServiceDeskCallerDN'];

	data.keys = chUtil.getAllConfigKeys('CallServiceDesk');
	data.validateKeys = chUtil.validateKeys(data.keys, validFields);
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>andre.nunes@stefanini.com</sys_created_by>
        <sys_created_on>2023-05-30 17:11:32</sys_created_on>
        <sys_id>5d41be721bc7e910ad11eb93b24bcb30</sys_id>
        <sys_mod_count>21</sys_mod_count>
        <sys_name>CallServiceDesk</sys_name>
        <sys_package display_value="Chameleon" source="x_stefa_chameleon">15b425181b832510cc28c955624bcbd6</sys_package>
        <sys_policy/>
        <sys_scope display_value="Chameleon">15b425181b832510cc28c955624bcbd6</sys_scope>
        <sys_update_name>sp_widget_5d41be721bc7e910ad11eb93b24bcb30</sys_update_name>
        <sys_updated_by>andre.nunes@stefanini.com</sys_updated_by>
        <sys_updated_on>2023-05-31 14:12:09</sys_updated_on>
        <template><![CDATA[<div class="panel panel-default">
  <div class="panel-heading">
    <h2 class="panel-title">
    		{{c.title}}
    </h2>
  </div>
  <div ng-attr-id="{{c.containerId}}" class="panel-body">
  	<p>
      {{c.error_message}}
    </p>
  </div>
</div>]]></template>
    </sp_widget>
</record_update>
