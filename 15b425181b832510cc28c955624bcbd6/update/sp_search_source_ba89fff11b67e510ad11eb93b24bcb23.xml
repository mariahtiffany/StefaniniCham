<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_search_source">
    <sp_search_source action="INSERT_OR_UPDATE">
        <advanced_typeahead_config>true</advanced_typeahead_config>
        <condition/>
        <data_fetch_script><![CDATA[var indexGroup = (typeof indexGroup !== "undefined") ? indexGroup : "portal_index_group";
(function(query, indexGroup) {
    var results = [];
    //Here goes the logic. Compute results however you want!
    if (!gs.isLoggedIn())
        return results;

    var taxonomyId = $sp.getTaxonomies();
    var sc;
    if (taxonomyId) {
		//For taxonomy topic based search send catalogs and categories as empty .
        sc = new sn_sc.CatalogSearch().search('', '', query);
		sc.addQuery('taxonomy_topic.active', true);
        sc.addQuery('taxonomy_topic.taxonomy', taxonomyId);
        sc.addQuery('sys_class_name', 'NOT IN', 'sc_cat_item_wizard');
        sc.addEncodedQuery('hide_sp=false^ORhide_spISEMPTY');
        if (facets.topic)
            sc.addQuery("taxonomy_topic", "IN", facets.topic.join(","));

    } else {
        var portalValue = $sp.getCatalogs().value;
        sc = new sn_sc.CatalogSearch().search(portalValue, '', query);
        sc.addQuery('sys_class_name', 'NOT IN', 'sc_cat_item_wizard');
        sc.addEncodedQuery('hide_sp=false^ORhide_spISEMPTY');
        if (facets.category)
            sc.addQuery("category", "IN", facets.category.join(","));
        if (facets.catalog)
            sc.addQuery("sc_catalogs", "CONTAINS", facets.catalog);
    }
    if (indexGroup)
        sc.addQuery('123TEXTINDEXGROUP321', indexGroup);
    sc.query();
    var catCount = 0;
    while (sc.next() && catCount < data.limit) {
        var catalog_item = new sn_sc.CatItem(sc.getUniqueValue());
        var category = catalog_item.getFirstAccessibleCategoryForSearch(facets.catalog ? facets.catalog : portalValue);
        var canViewItem = catalog_item.canViewOnSearch();
        if (!taxonomyId && !category)
            canViewItem = false;
        if (!canViewItem)
            continue;
        var item = {};
        item.type = "sc"; // supported types are "sc" and "sc_content"
        item.page = "sc_cat_item";
        item.table = "sc_cat_item"; // populate the table name for analytics
        if (sc.getRecordClassName() == "sc_cat_item_guide")
            item.page = "sc_cat_item_guide";
        else if (sc.getRecordClassName() == "sc_cat_item_content") {
            var gr = new GlideRecord('sc_cat_item_content');
            gr.get(sc.getUniqueValue());
            $sp.getRecordValues(item, gr, 'url,content_type,kb_article');
            item.type = "sc_content";
        }
        $sp.getRecordDisplayValues(item, sc, 'name,short_description,sys_id,sys_class_name');

        item['picture'] = catalog_item.getPicture();
        item['icon'] = catalog_item.getIcon();
        item['price'] = catalog_item.getCompleteItemPrice();
        item.score = parseInt(sc.ir_query_score.getDisplayValue());
        item.label = item.name;
        item.primary = item.name;
        // determine URL/target and default icon in case item has no picture/icon
        if (item.type == "sc") {
            item.url = '?id=' + item.page + '&sys_id=' + item.sys_id;
            item.default_icon = "folder-open-o";
        } else if (item.type == "sc_content") {
            item.default_icon = "book";
            if (item.content_type == "kb") {
                item.url = '?id=kb_article&sys_id=' + item.kb_article;
                item.default_icon = "file-text-o";
            } else if (item.content_type == "external") {
                item.url = item.url + "";
                item.target = '_blank';
            } else
                item.url = '?id=sc_cat_item&sys_id=' + item.sys_id;
        }
        results.push(item);
        catCount++;
    }

    return results;
})(query, indexGroup);]]></data_fetch_script>
        <display_fields/>
        <enable_typeahead>true</enable_typeahead>
        <facet_generation_script><![CDATA[(function(query, facetService, searchResults) {
    var taxonomyId = $sp.getTaxonomies();

    var portalValue = "";
    if (!taxonomyId)
        portalValue = $sp.getCatalogs().value;
    var sc;
    var results = [];
    if (gs.getProperty("glide.sc.largeSet.optimization.enable", "false") == "true")
        return;
    sc = new sn_sc.CatalogSearch().search(portalValue, '', query);
    sc.addQuery('sys_class_name', 'NOT IN', 'sc_cat_item_wizard');
    sc.addEncodedQuery('hide_sp=false^ORhide_spISEMPTY');
    if (taxonomyId) {
        sc.addQuery('taxonomy_topic.active', true);
        sc.addQuery('taxonomy_topic.taxonomy', taxonomyId);
    }

    sc.query();
    var catItemCount = 0;
    if (!taxonomyId) {
        while (sc.next()) {
            var primaryCategory = sc.getValue("category");
            if (GlideStringUtil.isEligibleSysID(primaryCategory)) {
                var primaryCategoryJS = new sn_sc.CatCategory(primaryCategory);
                var catalog_item = new sn_sc.CatItem(sc.getUniqueValue());
                var category = catalog_item.getFirstAccessibleCategoryForSearch(portalValue);
                if (!catalog_item.canViewOnSearch() ||
                    !category || !primaryCategoryJS.canView()) {
                    continue;
                }
                var item = {};
                item.categoryID = primaryCategory;
                var categoryJS = new sn_sc.CatCategory(primaryCategory);
                if (categoryJS) {
                    item.categoryLabel = categoryJS.getTitle();
                    item.catalogID = categoryJS.getCatalog();
                    var catalogJS = new sn_sc.Catalog(item.catalogID);
                    item.catalogLabel = catalogJS.getTitle();
                }
                results.push(item);
            }
        }
        var catalogMap = {};
        var categoryMap = {};
        var catalogCount = 0;
        results.forEach(function(item) {
            var catalogLabel = item.catalogLabel;
            var catalogValue = item.catalogID;
            var categoryLabel = item.categoryLabel;
            var categoryValue = item.categoryID;
            if (!categoryMap[categoryLabel]) {
                categoryMap[categoryLabel] = categoryValue;
            } else if ((categoryMap[categoryLabel] + "").indexOf(categoryValue) < 0) {
                categoryMap[categoryLabel] += "," + categoryValue;
            }
            if (!catalogMap[catalogLabel]) {
                catalogMap[catalogLabel] = catalogValue;
                catalogCount++;
            }
        });

        if (portalValue.split(",").length > 1) {
            var catalogFacet = facetService.createFacet(gs.getMessage('Catalog'), 'catalog');
            for (var label in catalogMap)
                catalogFacet.addFacetItem(label, catalogMap[label]);
        }

        var categoryFacet = facetService.createMultiChoiceFacet(gs.getMessage('ATF:Category_uppercase'), 'category');
        for (var label in categoryMap)
            categoryFacet.addFacetItem(label, categoryMap[label]);
    } else {
        var topics = {};
        while (sc.next()) {
            var primaryTopic = sc.getValue("taxonomy_topic");
            catalog_item = new sn_sc.CatItem(sc.getUniqueValue());

            if (!catalog_item.canViewOnSearch())
                continue;

            var topicLabel = sc.taxonomy_topic.getDisplayValue();
            topics[primaryTopic] = topicLabel;
        }
        var topicFacet = facetService.createMultiChoiceFacet(gs.getMessage('Topic'), 'topic');
        for (var id in topics)
            topicFacet.addFacetItem(topics[id], id);

    }



})(query, facetService, searchResults);]]></facet_generation_script>
        <id>ino_sc</id>
        <is_scripted_source>true</is_scripted_source>
        <name>Catalogs</name>
        <page/>
        <pagination_supported>false</pagination_supported>
        <primary_display_field/>
        <roles/>
        <search_page_template><![CDATA[<div ng-if="item.type == 'sc'" class="sc">
  <a href="{{item.url}}" class="h4 text-primary m-b-sm block" onclick="window.GlideWebAnalytics.trackEvent('Service Catalog', 'Catalog Search Results Page', 'Item Clicked');">
    <i ng-if="item.picture" class="ta-img" style="background-image:url('{{item.picture}}?t=small')"></i>
	<i ng-if="!item.picture && item.icon" class="ta-icon" style="background-image:url('{{item.icon}}'); width:16px; height:16px;margin-right:15px"></i>
    <i ng-if="!item.picture && !item.icon" class="ta-icon fa fa-shopping-cart"></i>
    <span ng-bind-html="highlight(escapeHTML(item.name), escapeHTML(data.q))"></span></a>
  <div ng-style="getBGImage(item)" ng-if="item.picture" class="img-responsive m-r item-image pull-left"></div>
  <p ng-bind-html="highlight(escapeHTML(item.short_description), escapeHTML(data.q))"></p>
  <span class="text-muted m-r-sm" ng-if="data.showPrices && item.price != '$0.00'">{{item.price}}</span>
</div>
<div ng-if="item.type == 'sc_content'">
  <a ng-if="item.content_type == 'external'" ng-href="{{::item.url}}" target="_blank" class="h4 text-primary m-b-sm block" onclick="window.GlideWebAnalytics.trackEvent('Service Catalog', 'Catalog Search Results Page', 'Item Clicked');"><span ng-bind-html="highlight(escapeHTML(item.name), escapeHTML(data.q))"></span> âžš</a>
  <a ng-if="item.content_type == 'kb'" ng-href="?id=kb_article&sys_id={{::item.kb_article}}" class="h4 text-primary m-b-sm block" onclick="window.GlideWebAnalytics.trackEvent('Service Catalog', 'Catalog Search Results Page', 'Item Clicked');">
    <i class="fa m-r-sm fa-file-text-o"></i>
    <span ng-bind-html="highlight(escapeHTML(item.name), escapeHTML(data.q))"></span>
  </a>
  <a ng-if="item.content_type == 'literal'" ng-href="?id={{item.page}}&sys_id={{item.sys_id}}" class="h4 text-primary m-b-sm block" onclick="window.GlideWebAnalytics.trackEvent('Service Catalog', 'Catalog Search Results Page', 'Item Clicked');">
    <i class="fa m-r-sm fa-file-text-o"></i>
    <span ng-bind-html="highlight(escapeHTML(item.name), escapeHTML(data.q))"></span></a>
  <div ng-style="getBGImage(item)" ng-if="item.picture" class="img-responsive m-r item-image pull-left"></div>
  <p ng-bind-html="highlight(escapeHTML(item.short_description), escapeHTML(data.q))"></p>
</div>]]></search_page_template>
        <source_table/>
        <sys_class_name>sp_search_source</sys_class_name>
        <sys_created_by>vinicius.lourenco@stefanini.com</sys_created_by>
        <sys_created_on>2023-06-21 16:26:14</sys_created_on>
        <sys_id>ba89fff11b67e510ad11eb93b24bcb23</sys_id>
        <sys_mod_count>3</sys_mod_count>
        <sys_name>Catalogs</sys_name>
        <sys_package display_value="Chameleon" source="x_stefa_chameleon">15b425181b832510cc28c955624bcbd6</sys_package>
        <sys_policy/>
        <sys_scope display_value="Chameleon">15b425181b832510cc28c955624bcbd6</sys_scope>
        <sys_update_name>sp_search_source_ba89fff11b67e510ad11eb93b24bcb23</sys_update_name>
        <sys_updated_by>vinicius.lourenco@stefanini.com</sys_updated_by>
        <sys_updated_on>2023-06-29 20:59:01</sys_updated_on>
        <typeahead_glyph/>
        <typeahead_template><![CDATA[<!-- prefer item picture to item icon, prefer item icon to default icon -->
<div onclick="window.GlideWebAnalytics.trackEvent('Service Catalog', 'Catalog Search Type Ahead', 'Item Clicked')">
<i ng-if="match.model.picture" class="ta-img" style="background-image:url('{{match.model.picture}}?t=small')"></i>
<i ng-if="!match.model.picture && match.model.icon" class="ta-icon" style="background-image:url('{{match.model.icon}}'); width:16px; height:16px"></i>
<i ng-if="!match.model.picture && !match.model.icon" class="ta-icon fa fa-{{match.model.default_icon}}"></i>
<span ng-bind-html="match.label | uibTypeaheadHighlight:query"></span>
<strong ng-if="match.model.type == 'sc_content' && match.model.content_type == 'external'">âžš</strong>
</div>]]></typeahead_template>
    </sp_search_source>
    <sys_translated_text action="delete_multiple" query="documentkey=ba89fff11b67e510ad11eb93b24bcb23"/>
</record_update>
